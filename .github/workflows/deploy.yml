name: Deploy Frontend Infrastructure

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::615201069679:role/GitHubActions_PortfolioFrontend_Role
          aws-region: ap-south-1 

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      - name: Capture Terraform Outputs
        id: tf_outputs
        run: |
          echo "tf_output=$(terraform output -json)" >> $GITHUB_ENV

      - name: Sync Website Files to S3
        run: |
          BUCKET_NAME=$(echo "$tf_output" | jq -r '.s3_bucket_name.value')
          aws s3 sync my-website-files/ s3://$BUCKET_NAME --delete
      
      - name: Invalidate CloudFront Cache
        run: |
          DISTRIBUTION_ID=$(echo "$tf_output" | jq -r '.cloudfront_distribution_id.value')
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"